// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" 
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  profile   Profile?
  authoredKudos   Kudo[]  @relation("AuthoredKudos")
  receivedKudos   Kudo[]  @relation("ReceivedKudos")
}

model Profile {
  id        Int      @id @default(autoincrement())  // Prim채rschl체ssel f체r Profile
  firstName String
  lastName  String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique// Fremdschl체ssel auf User
  department String @default("")
  profilePicture String? @default("")
}

model Kudo {
  id          String     @id @default(uuid()) @map("_id")
  message     String
  createdAt   DateTime   @default(now())


  author      User       @relation(references: [id], fields: [authorId], onDelete: Cascade, "AuthoredKudos")
  authorId    Int

  recipient   User     @relation(fields: [recipientId], references: [id], name: "ReceivedKudos")
  recipientId Int 

  style   KudoStyle[]  @relation("KudoStyles")
}

model KudoStyle {
  id          Int     @id @default(autoincrement())
  backgroundColor String @default("YELLOW")

  textColor       String @default("WHITE")

  emoji           String @default("THUMBSUP")
  kudo      Kudo     @relation(fields: [kudoId], references: [id], name: "KudoStyles")
  kudoId    String
}